From 109022c0c22aa5cd0d697867d436ca49d001dd8c Mon Sep 17 00:00:00 2001
From: AfalpHy <736353503@qq.com>
Date: Mon, 17 Feb 2025 15:08:30 +0800
Subject: [PATCH 15/29] implement gpio

---
 perip/gpio/gpio_top_apb.v | 134 +++++++++++++++++++++++++++++++-------
 1 file changed, 110 insertions(+), 24 deletions(-)

diff --git a/perip/gpio/gpio_top_apb.v b/perip/gpio/gpio_top_apb.v
index ec51ffe5..eacbbdf8 100644
--- a/perip/gpio/gpio_top_apb.v
+++ b/perip/gpio/gpio_top_apb.v
@@ -1,27 +1,113 @@
-module gpio_top_apb(
-  input         clock,
-  input         reset,
-  input  [31:0] in_paddr,
-  input         in_psel,
-  input         in_penable,
-  input  [2:0]  in_pprot,
-  input         in_pwrite,
-  input  [31:0] in_pwdata,
-  input  [3:0]  in_pstrb,
-  output        in_pready,
-  output [31:0] in_prdata,
-  output        in_pslverr,
-
-  output [15:0] gpio_out,
-  input  [15:0] gpio_in,
-  output [7:0]  gpio_seg_0,
-  output [7:0]  gpio_seg_1,
-  output [7:0]  gpio_seg_2,
-  output [7:0]  gpio_seg_3,
-  output [7:0]  gpio_seg_4,
-  output [7:0]  gpio_seg_5,
-  output [7:0]  gpio_seg_6,
-  output [7:0]  gpio_seg_7
+module gpio_top_apb (
+    input         clock,
+    input         reset,
+    input  [31:0] in_paddr,
+    input         in_psel,
+    input         in_penable,
+    input  [ 2:0] in_pprot,
+    input         in_pwrite,
+    input  [31:0] in_pwdata,
+    input  [ 3:0] in_pstrb,
+    output        in_pready,
+    output [31:0] in_prdata,
+    output        in_pslverr,
+
+    output [15:0] gpio_out,
+    input  [15:0] gpio_in,
+    output [ 7:0] gpio_seg_0,
+    output [ 7:0] gpio_seg_1,
+    output [ 7:0] gpio_seg_2,
+    output [ 7:0] gpio_seg_3,
+    output [ 7:0] gpio_seg_4,
+    output [ 7:0] gpio_seg_5,
+    output [ 7:0] gpio_seg_6,
+    output [ 7:0] gpio_seg_7
 );
+  reg [15:0] led_data;
+  reg [31:0] bcd_data;
+
+  reg ack;
+
+  wire [31:0] mask = {{8{in_pstrb[3]}}, {8{in_pstrb[2]}}, {8{in_pstrb[1]}}, {8{in_pstrb[0]}}};
+
+  assign gpio_out  = led_data;
+  assign in_pready = ack;
+
+  always @(posedge clock) begin
+    if (reset) begin
+      led_data <= 0;
+      bcd_data <= 0;
+      ack <= 0;
+    end else begin
+      if (in_psel && in_penable) begin
+        if (in_pwrite) begin
+          if (in_paddr[3]) bcd_data <= (bcd_data & ~mask) | (in_pwdata & mask);
+          else led_data <= (led_data & ~(mask[15:0]) | (in_pwdata[15:0] & mask[15:0]));
+        end
+        ack <= 1;
+      end else ack <= 0;
+    end
+  end
+
+  bcd7seg bcd0 (
+      bcd_data[31:28],
+      gpio_seg_7
+  );
+  bcd7seg bcd1 (
+      bcd_data[27:24],
+      gpio_seg_6
+  );
+  bcd7seg bcd2 (
+      bcd_data[23:20],
+      gpio_seg_5
+  );
+  bcd7seg bcd3 (
+      bcd_data[19:16],
+      gpio_seg_4
+  );
+  bcd7seg bcd4 (
+      bcd_data[15:12],
+      gpio_seg_3
+  );
+  bcd7seg bcd5 (
+      bcd_data[11:8],
+      gpio_seg_2
+  );
+  bcd7seg bcd6 (
+      bcd_data[7:4],
+      gpio_seg_1
+  );
+  bcd7seg bcd7 (
+      bcd_data[3:0],
+      gpio_seg_0
+  );
+
+endmodule
+
+module bcd7seg (
+    input [3:0] b,
+    output reg [7:0] h
+);
+
+  always @(*) begin
+    case (b)
+      4'b0000: h = 8'b0000_0011;
+      4'b0001: h = 8'b1001_1111;
+      4'b0010: h = 8'b0010_0101;
+      4'b0011: h = 8'b0000_1101;
+      4'b0100: h = 8'b1001_1001;
+      4'b0101: h = 8'b0100_1001;
+      4'b0110: h = 8'b0100_0001;
+      4'b0111: h = 8'b0001_1111;
+      4'b1000: h = 8'b0000_0001;
+      4'b1001: h = 8'b0000_1001;
+      4'b1010: h = 8'b0001_0001;
+      4'b1011: h = 8'b1100_0001;
+      4'b1100: h = 8'b0110_0011;
+      4'b1101: h = 8'b1000_0101;
+      4'b1110: h = 8'b0110_0001;
+      4'b1111: h = 8'b0111_0001;
+    endcase
+  end
 
 endmodule
-- 
2.34.1

